prep=~/.local/tools/prep
cwd=`pwd`
grammar=st.ohm
identity-format=identity-st.fmt
format=st.fmt
src=../script.js
target=script.js
supportfile=fmt.js
support=--fmt=${cwd}/fmt.js

#all: identity preprocess
all:
	make dev

identity:
	${prep} '❮' '❯' ${grammar} ${identity-format} ${support} --errorview --inclusive <${src}

preprocess: ${grammar} ${format}  ${supportfile}
	${prep} '❮' '❯' ${grammar} ${format} ${support} --errorview --inclusive <${src} >out.js

verbatim3: send.ohm send.fmt fmt.js foreach.hsm
	${prep} '```' '```' verbatim3.ohm verbatim.fmt ${support} --inclusive <foreach.hsm

verbatim1: send.ohm send.fmt fmt.js foreach.hsm
	${prep} '`' '`' verbatim1.ohm verbatim.fmt ${support} --inclusive <foreach.hsm

send: send.ohm send.fmt fmt.js foreach.hsm
	${prep} '⇑' '\n' send.ohm send.fmt ${support} <foreach.hsm

next: next.ohm next.fmt fmt.js foreach.hsm
	${prep} '☞' '\n' next.ohm next.fmt ${support} <foreach.hsm

# foreach.mdsm -> foreach.sm
# transpile markdown-sm to .sm (structured, CFG)
foreach.sm: foreach.mdsm send.ohm send.fmt next.ohm next.fmt mdsm.ohm mdsm.fmt
	cat foreach.mdsm \
	| ${prep} '```' '```' verbatim3.ohm verbatim.fmt --inclusive ${support} \
	| tee f.1 \
	| ${prep} '`' '`' verbatim1.ohm verbatim.fmt --inclusive ${support} \
	| tee f.2 \
	| ${prep} '.' '$$' mdsm.ohm mdsm.fmt ${support} --stop=1 --errorview \
	| tee foreach.sm \
	| cat -

# foreach.mdsm -> foreach.sm -> foreach.toolbox
# transpile .sm state machine to toolbox code (like pseudo-code)
foreach.pseudo.sm: foreach.sm
	cat foreach.sm \
	| ${prep} '.' '$$' sm.ohm sm.pseudo.fmt ${support} --stop=1 \
	| tee foreach.pseudo.sm \
	| cat -

# foreach.mdsm -> foreach.sm -> foreach.toolbox -> foreach.toolbox.lisp

# foreach.js: foreach.sm send.ohm send.fmt next.ohm next.fmt

# foreach : foreach.sm
# 	cat foreach.sm \
# 	| ${prep} '.' '$$' hsm.ohm hsm.fmt ${support} --stop=1 --errorview \
# 	| ${prep} '⇑' '\n' send.ohm send.fmt ${support} \
# 	| ${prep} '☞' '\n' next.ohm next.fmt ${support} \
# 	| cat -


dev:
	rm foreach.sm
	rm -f f.*
	make foreach.pseudo.sm

## one-time only - helper to make batch edit
strings:
	# ${prep} '.' '$$' strings.ohm identity-strings.fmt --stop=1 <toolbox.ohm
	${prep} '.' '$$' strings.ohm strings.fmt --stop=1 <toolbox.ohm | sort | uniq
	# now, edit the result to manually make stringrepl.py

destring:
	python stringrepl.py <toolbox.ohm \
	> /tmp/toolbox.destring

identity-fmtify:
	python stringrepl.py <toolbox.ohm \
	| tee /tmp/toolbox.destring \
	| ${prep} '.' '$$' fmtify.ohm identity-fmtify.fmt --stop=1 

fmtify:
	python stringrepl.py <toolbox.ohm \
	| tee /tmp/toolbox.destring \
	| ${prep} '.' '$$' fmtify.ohm fmtify.fmt --fmt=${cwd}/fmt.js --stop=1 
devfmtify:
	python stringrepl.py <test.ohm \
	| tee /tmp/toolbox.destring \
	| ${prep} '.' '$$' fmtify.ohm fmtify.fmt --fmt=${cwd}/fmt.js --stop=1 
